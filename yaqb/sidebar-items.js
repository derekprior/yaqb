initSidebarItems({"macro":[["infix_predicate!",""],["no_arg_sql_function!",""],["numeric_expr!",""],["operator_allowed!",""],["sql_function!",""],["table!","Specifies that a table exists, and what columns it has. This will create a new public module, with the same name, as the name of the table. In this module, you'll find a unit struct named `table`, and a unit struct with the names of each of the columns. In the definition, you can also specify an additional set of columns which exist, but should not be selected by default (for example, for things like full text search)"]],"mod":[["expression","AST types representing various typed SQL expressions. Almost all types implement either `Expression` or `AsExpression`."],["helper_types",""],["persistable",""],["query_builder",""],["query_source","Types in this module are mostly internal and automatically generated. You shouldn't need to interact with these types during normal usage, other than the methods on `Table`"],["result",""],["types",""]],"struct":[["Connection",""],["Cursor","The type returned by various `Connection` methods. Acts as an iterator over `T`."]],"trait":[["BelongingToDsl",""],["CountDsl",""],["FilterDsl",""],["JoinTo","Indicates that two tables can be used together in a JOIN clause. Implementations of this trait will be generated for you automatically by the association annotations from codegen."],["LimitDsl",""],["LoadDsl",""],["OffsetDsl",""],["OrderDsl",""],["SelectDsl",""],["SelectSqlDsl",""],["WithDsl",""]]});